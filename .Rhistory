pok_age_l100
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
summary(pok_new)
View(pok_cleaned)
View(pok_cleaned)
View(pok_cleaned)
View(pok_cleaned)
test <- as.numeric(pok_new$attitude_attitude1)
test
pok_new$attitude_attitude2
# The first observation
load("pokemon.Rdata")
head(pok,1)
# primary observe of data
summary(pok)
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
pok_age_l100 <- pok[pok$age >100,]
pok_age_l100
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
summary(pok_new)
pok_Num <- pok_new
summary(pok_new)
View(pok_Num)
pok_Num[7:12]
pok_Num[7:12] <- as.numeric(pok_new[7:12])
pok_Num[7]
pok_Num[7] <- as.numeric(pok_new[7])
pok_Num$attitude_attitude1
pok_Num <- as.numeric(pok_Num)
pok_new[i]
for (i in 1:31)
pok_new[i]
###convert variables into number###
is.data.frame(pok_new)
# import library required
library(dplyr)
###convert variables into number###
pok_new %>% mutate_if(is.character,as.numeric)
pok_new
###convert variables into number###
pok_new <- pok_new %>% mutate_if(is.character,as.numeric)
pok_new
###convert variables into number###
pok_new <- pok_new %>% mutate_if(is.factor,as.numeric)
pok_new
summery(pok_new)
summary(pok_new)
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
###convert variables into numeric values###
pok_new[-1:3] <- pok_new %>% mutate_if(is.factor,as.numeric)
###convert variables into numeric values###
pok_new[-1:3] <- pok_new[-1:3] %>% mutate_if(is.factor,as.numeric)
###convert variables into numeric values###
pok_new[,-1:3] <- pok_new[,-1:3] %>% mutate_if(is.factor,as.numeric)
###convert variables into numeric values###
pok_new[,4:31] <- pok_new[,4:31] %>% mutate_if(is.factor,as.numeric)
summary(pok_new)
pok_new$education
View(pok)
# import library required
library(dplyr)
library(ltm)
install.packages("ltm")
# import library required
library(dplyr)
library(ltm)
# The first observation
load("pokemon.Rdata")
head(pok,1)
# primary observe of data
summary(pok)
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
pok_age_l100 <- pok[pok$age >100,]
pok_age_l100
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
summary(pok_new)
###convert variables into numeric values###
pok_new[,4:31] <- pok_new[,4:31] %>% mutate_if(is.factor,as.numeric)
summary(pok_new)
remove(pok_cleaned)
remove(pok_Num)
remove(pok_age)
# import library required
library(dplyr)
library(ltm)
# The first observation
load("pokemon.Rdata")
head(pok,1)
# primary observe of data
summary(pok)
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
pok_age_l100 <- pok[pok$age >100,]
pok_age_l100
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
###Justify the grouping###
# Cronbach's alpha
attitude_data <- pok[7:12]
attitude_data
head(attitude_data)
###Justify the grouping###
# Cronbach's alpha
attitude_data <- pok_new[7:12]
# The first observation
load("pokemon.Rdata")
head(pok,1)
# primary observe of data
summary(pok)
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
pok_age_l100 <- pok[pok$age >100,]
pok_age_l100
#@ This dataset is really good, without error or missing value
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
#################################
###Preparation of Grouped data###
#################################
###convert variables into numeric values###
pok_new[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
summary(pok_new)
###Justify the grouping###
# Cronbach's alpha
attitude_data <- pok_new[7:12]
head(attitude_data)
stepsatti_data <- pok_new[13:18]
head(stepsatti_data)
behaviour_data <- pok_new[19:24]
head(behaviour_data)
PokemonBehav_data <- pok_new[27:29]
head(PokemonBehav_data)
# Calculate Cronbach's Alpha
cronbach.alpha(attitude_data)
cronbach.alpha(stepsatti_data)
cronbach.alpha(behaviour_data)
cronbach.alpha(PokemonBehav_data)
attitude_data
# Calculate Cronbach's Alpha
cronbach.alpha(attitude_data, CI=TRUE)
attitude_data
# import library required
library(dplyr)
library(ltm)
# The first observation
load("pokemon.Rdata")
head(pok,1)
# primary observe of data
summary(pok)
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
pok_age_l100 <- pok[pok$age >100,]
pok_age_l100
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
# test
pok_new[7:12]
# test
a <- pok_new[7:12]
cronbach.alpha(a, CI=TRUE)
# test
a <- pok_new[7:10]
cronbach.alpha(a, CI=TRUE)
# test
a <- pok_new[7:8]
cronbach.alpha(a, CI=TRUE)
# test
a <- pok_new[7:11]
cronbach.alpha(a, CI=TRUE)
###convert variables into numeric values###
pok_num[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
# test
a <- pok_new[7:12]
cronbach.alpha(a, CI=TRUE)
# Calculate Cronbach's Alpha
cronbach.alpha(attitude_data)
cronbach.alpha(stepsatti_data)
cronbach.alpha(behaviour_data)
cronbach.alpha(PokemonBehav_data)
View(pok_new)
# variable grouping
Behaviour <- mean(pok_num[19:24])
###convert variables into numeric values###
pok_num[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
# import library required
library(dplyr)
library(ltm)
# The first observation
load("pokemon.Rdata")
head(pok,1)
# primary observe of data
summary(pok)
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
pok_age_l100 <- pok[pok$age >100,]
pok_age_l100
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
###convert variables into numeric values###
pok_num[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
###convert variables into numeric values###
pok_num[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
# import library required
library(dplyr)
library(ltm)
# The first observation
load("pokemon.Rdata")
head(pok,1)
# primary observe of data
summary(pok)
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
pok_age_l100 <- pok[pok$age >100,]
pok_age_l100
#@ This dataset is really good, without error or missing value
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
###convert variables into numeric values###
pok_new[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
summary(pok_new)
###Justify the grouping###
# select targeted
attitude_data <- pok_new[7:12]
stepsatti_data <- pok_new[13:18]
behaviour_data <- pok_new[19:24]
PokemonBehav_data <- pok_new[27:29]
# Calculate Cronbach's Alpha
cronbach.alpha(attitude_data)
cronbach.alpha(stepsatti_data)
cronbach.alpha(behaviour_data)
cronbach.alpha(PokemonBehav_data)
# variable grouping
Behaviour <- mean(pok_num[19:24])
# variable grouping
Behaviour <- mean(pok_new[19:24])
pok_new[19:24]
# variable grouping
Behaviour <- rowMeans(pok_new[19:24])
head(Behaviour)
Behaviour
# variable grouping
Attitude <- rowMeans(pok_new[7:12])
Attitude
PokemonBehaviour <- rowMeans(pok_new[27:29])
# Calculate Cronbach's Alpha
cronbach.alpha(pok_new[7:12])
Pok_Grouped <- pok_new[c(1:6)]
Pok_Grouped
Pok_Grouped <- pok_new[c(1:6,Attitude)]
Pok_Grouped <- pok_new[c(1:6)]
Pok_Grouped
pok_Grouped$Attitude <- Attitude
Pok_Grouped <- pok_new[c(1:6)]
pok_Grouped$Attitude <- Attitude
Pok_Grouped$Attitude <- Attitude
Pok_Grouped$Attitude
StepAttitude <- rowMeans(pok_new[13:18])
Pok_Grouped$StepsAttitude <- StepAttitude
Pok_Grouped$Behaviour <- Behaviour
Pok_Grouped$PokemonGo_AppUsage <- pok_new$app_usage_PokemonGoApp_pokemonusage1
Pok_Grouped$social_sharing <- pok_new$social_sharing
Pok_Grouped$PokemonRelate_Behaviour <- PokemonBehaviour
head(Pok_Grouped)
library(psych)
install.packages(psych)
install.packages("psych")
library(psych)
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12])
# Pokemon Behviour
alpha(pok_new[27:29])
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12])
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12], check.keys=TRUE)
# steps Attitude
alpha(pok_new[13:18], check.keys=TRUE)
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12], check.keys=TRUE)
# steps Attitude
alpha(pok_new[13:18], check.keys=TRUE)
# Behaviour
alpha(pok_new[19:24], check.keys=TRUE)
# Pokemon Behviour
alpha(pok_new[27:29], check.keys=TRUE)
# import library required
library(dplyr)
library(psych)
# The first observation
load("pokemon.Rdata")
head(pok,1)
# primary observe of data
summary(pok)
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
pok_age_l100 <- pok[pok$age >100,]
pok_age_l100
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
###convert variables into numeric values###
pok_new[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
summary(pok_new)
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12], check.keys=TRUE)
# steps Attitude
alpha(pok_new[13:18], check.keys=TRUE)
# Behaviour
alpha(pok_new[19:24], check.keys=TRUE)
# Pokemon Behviour
alpha(pok_new[27:29], check.keys=TRUE)
# variable grouping
Attitude <- rowMeans(pok_new[7:12])
StepAttitude <- rowMeans(pok_new[13:18])
Behaviour <- rowMeans(pok_new[19:24])
PokemonBehaviour <- rowMeans(pok_new[27:29])
# create new dataset
Pok_Grouped <- pok_new[c(1:6)]
Pok_Grouped$Attitude <- Attitude
Pok_Grouped$StepsAttitude <- StepAttitude
Pok_Grouped$Behaviour <- Behaviour
Pok_Grouped$PokemonGo_AppUsage <- pok_new$app_usage_PokemonGoApp_pokemonusage1
Pok_Grouped$social_sharing <- pok_new$social_sharing
Pok_Grouped$PokemonRelate_Behaviour <- PokemonBehaviour
head(Pok_Grouped)
remove(Pok_Grouped)
# variable grouping
Attitude <- rowMeans(pok_new[7:12])
StepAttitude <- rowMeans(pok_new[13:18])
Behqviour <- rowMeans(pok_new[19:24])
PokemonBehaviour <- rowMeans(pok_new[27:29])
# create new dataset
Pok_Grouped <- pok_new[c(1:6)]
Pok_Grouped$Attitude <- Attitude
Pok_Grouped$StepsAttitude <- StepAttitude
Pok_Grouped$PhyscialActivity <- Behaviour
Pok_Grouped$PokemonGo_AppUsage <- pok_new$app_usage_PokemonGoApp_pokemonusage1
Pok_Grouped$social_sharing <- pok_new$social_sharing
Pok_Grouped$PokemonRelate_Behaviour <- PokemonBehaviour
head(Pok_Grouped)
pok_new[c(1:6)]
remove(Pok_Grouped)
remove(attitude_data)
remove(behaviour_data)
remove(PokemonBehav_data)
remove(stepsatti_data)
# create new dataset
Pok_Grouped <- pok_new[c(4:6)]
Pok_Grouped$Attitude <- Attitude
Pok_Grouped$StepsAttitude <- StepAttitude
Pok_Grouped$PhyscialActivity <- Behaviour
Pok_Grouped$PokemonGo_AppUsage <- pok_new$app_usage_PokemonGoApp_pokemonusage1
Pok_Grouped$social_sharing <- pok_new$social_sharing
Pok_Grouped$PokemonRelate_Behaviour <- PokemonBehaviour
head(Pok_Grouped)
# Is a higher frequency of playing Pokemon Go associated with a higher amount of
#  physical activity?
Pokemon_Linear <- lm(PhyscialActivity ~ . ,Pok_Grouped)
Pokemon_Linear
# Relations between all variables and Physical Acticity
Pokemon_Linear <- lm(PhyscialActivity ~ . ,Pok_Grouped)
summary(Pokemon_Linear)
# Relations between all variables and Physical Acticity
PokemonGo_Linear <- lm(PhyscialActivity ~ . ,Pok_Grouped)
Pok_Logit <- glm(PhyscialActivity ~ . , data = mydata, family = "binomial")
Pok_Logit <- glm(PhyscialActivity ~ . , data = Pok_Grouped, family = "binomial")
Pok_Logit <- polr(PhyscialActivity ~ . , data = datatrain, Hess = TRUE)
library(ordinal)
install.packages("ordinal")
###logistic regression model###
Pok_Logit <- polr(PhyscialActivity ~ . , data = datatrain, Hess = TRUE)
require(foreign)
require(ggplot2)
require(MASS)
require(Hmisc)
require(reshape2)
###logistic regression model###
Pok_Logit <- polr(PhyscialActivity ~ . , data = datatrain, Hess = TRUE)
###logistic regression model###
Pok_Logit <- polr(PhyscialActivity ~ . , data = Pok_Grouped, Hess = TRUE)
##Stepwise Selection
step.Pok_Linear <- stepAIC(Pok_Linear, direction = "both",
trace = FALSE)
# import library required
library(dplyr)
library(psych)
require(foreign)
require(ggplot2)
require(MASS)
require(Hmisc)
require(reshape2)
# The first observation
load("pokemon.Rdata")
head(pok,1)
# primary observe of data
summary(pok)
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
pok_age_l100 <- pok[pok$age >100,]
pok_age_l100
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
###convert variables into numeric values###
pok_new[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
summary(pok_new)
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12], check.keys=TRUE)
# steps Attitude
alpha(pok_new[13:18], check.keys=TRUE)
# Behaviour
alpha(pok_new[19:24], check.keys=TRUE)
# Pokemon Behviour
alpha(pok_new[27:29], check.keys=TRUE)
# variable grouping
Attitude <- rowMeans(pok_new[7:12])
StepAttitude <- rowMeans(pok_new[13:18])
Behqviour <- rowMeans(pok_new[19:24])
PokemonBehaviour <- rowMeans(pok_new[27:29])
# create new dataset
Pok_Grouped <- pok_new[c(4:6)]
Pok_Grouped$Attitude <- Attitude
Pok_Grouped$StepsAttitude <- StepAttitude
Pok_Grouped$PhyscialActivity <- Behaviour
Pok_Grouped$PokemonGo_AppUsage <- pok_new$app_usage_PokemonGoApp_pokemonusage1
Pok_Grouped$social_sharing <- pok_new$social_sharing
Pok_Grouped$PokemonRelate_Behaviour <- PokemonBehaviour
head(Pok_Grouped)
###Simple linear model###
# Relations between all variables and Physical Acticity
Pok_Linear <- lm(PhyscialActivity ~ . , data = Pok_Grouped)
##Stepwise Selection
step.Pok_Linear <- stepAIC(Pok_Linear, direction = "both",
trace = FALSE)
summary(step.model)
summary(step.Pok_Linear)
##Stepwise Selection
step.Pok_Linear <- stepAIC(Pok_Linear, direction = "both",
trace = TRUE)
summary(step.Pok_Linear)
#@ Since t-value "Gender", "StepsAttitude" and "PokemonRelate_Behaviour"
#@ smaller than 0.001, drop them
# The Final model
Pok_Linear_final <- lm(PhyscialActivity ~ age + education + Attitude, data = Pok_Grouped)
##Stepwise Selection
AIC.step.Pok_Linear <- stepAIC(Pok_Linear, direction = "both",
trace = TRUE)
##Stepwise Selection
AIC.step.Pok_Linear <- stepAIC(Pok_Linear, direction = "both",
trace = FALSE)
summary(AIC.step.Pok_Linear)
BIC.step.Pok_Linear <- stepBIC(Pok_Linear, direction = "both",
trace = FALSE)
summary(BIC.step.Pok_Linear)
ggplot(Pok_Grouped, aes(age, PhyscialActivity)) +
geom_jitter(height = 0) +
ggtitle("Age versus Physical ACtivity")
ggplot(Pok_Grouped, aes(age, PhyscialActivity)) +
ggtitle("Age versus Physical ACtivity")
ggplot(Pok_Grouped, aes(Attitude, PhyscialActivity)) +
ggtitle("Age versus Physical ACtivity")
ggplot(Pok_Grouped, aes(Attitude, PhyscialActivity)) +
geom_jitter(height = 0) +
ggtitle("Attitude versus Physical Activity")
ggplot(Pok_Grouped, aes(PokemonGo_AppUsage, PhyscialActivity)) +
geom_jitter(height = 0) +
ggtitle("Attitude versus Physical Activity")
