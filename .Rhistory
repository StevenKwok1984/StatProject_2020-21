AIC(Pok.Linear5)
###Linear model###
Pok.Linear <- lm(PhysicalActivity ~ .^2 + I(age^2) +
+ I(Attitude^2) +
I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
summary(Pok.Linear)
anova(Pok.Linear)
AIC(Pok.Linear)
ols_step_both_aic(Pok.Linear)
#Creating a new model selected using ols_step_both_aic()
Pok.Linear2 <- lm(PhysicalActivity ~ I(Attitude * PokemonGo_Relate.Behaviour) + PokemonGo_AppUsage + I(education*Gender) + age + I(age*Attitude) +
PokemonGo_Relate.Behaviour + I(social_sharing * PokemonGo_Relate.Behaviour), data=Pok_Grouped)
summary(Pok.Linear2)
#Removing insignificant variable from Pok.Linear2 model
Pok.Linear3 <- lm(PhysicalActivity ~ PokemonGo_AppUsage + I(education*Gender) + age + I(age*Attitude) +
#Removing insignificant variable from Pok.Linear2 model
Pok.Linear3 <- lm(PhysicalActivity ~ PokemonGo_AppUsage + I(education*Gender) + age + I(age*Attitude) +
PokemonGo_Relate.Behaviour + I(social_sharing*PokemonGo_Relate.Behaviour), data=Pok_Grouped)
summary(Pok.Linear3)
#Removing insignificant variable from Pok.Linear2 model
Pok.Linear3 <- lm(PhysicalActivity ~ PokemonGo_AppUsage + I(education*Gender) + age + I(age*Attitude) +
PokemonGo_Relate.Behaviour + I(social_sharing*PokemonGo_Relate.Behaviour), data=Pok_Grouped)
summary(Pok.Linear3)
AIC(Pok.Linear3)
summary(Pok.Linear2)
#Removing insignificant variable from Pok.Linear2 model
Pok.Linear3 <- lm(PhysicalActivity ~ PokemonGo_AppUsage + I(education*Gender) + age + I(age*Attitude) +
PokemonGo_Relate.Behaviour + I(social_sharing*PokemonGo_Relate.Behaviour), data=Pok_Grouped)
summary(Pok.Linear3)
AIC(Pok.Linear3)
#Performing step-wise regression on Pok.Linear model using stepAIC()
stepAIC(Pok.Linear)
#Removing insignificant variable from Pok.Linear4 model
Pok.Linear5 <- lm(PhysicalActivity ~ I(education*age) + I(Attitude^2) + I(education*Attitude) + Gender + I(PokemonGo_Relate.Behaviour^2) + PokemonGo_Relate.Behaviour + PokemonGo_AppUsage, data=Pok_Grouped)
summary(Pok.Linear5)
#Creating a new model selected using stepAIC()
Pok.Linear4 <- lm(PhysicalActivity ~ I(education*age) + I(Attitude^2) + I(PokemonGo_Relate.Behaviour^2) + I(education*Attitude) + Gender + PokemonGo_Relate.Behaviour + PokemonGo_AppUsage, data=Pok_Grouped)
#Removing insignificant variable from Pok.Linear4 model
Pok.Linear5 <- lm(PhysicalActivity ~ I(education*age) + I(Attitude^2) + I(education*Attitude) + Gender + PokemonGo_Relate.Behaviour + PokemonGo_AppUsage, data=Pok_Grouped)
summary(Pok.Linear5)
summary(Pok.Linear2)
#Removing insignificant variable from Pok.Linear2 model
Pok.Linear3 <- lm(PhysicalActivity ~ PokemonGo_AppUsage + I(education*Gender) + age + I(age*Attitude) +
PokemonGo_Relate.Behaviour + I(social_sharing*PokemonGo_Relate.Behaviour), data=Pok_Grouped)
summary(Pok.Linear3)
AIC(Pok.Linear3)
AIC(Pok.Linear2)
#Performing step-wise regression on Pok.Linear model using stepAIC()
stepAIC(Pok.Linear)
summary(Pok.Linear4)
f <- ggplot(aes(x = PokemonGo_Relate.Behaviour, y = PhysicalActivity), data = Pok_Grouped) +
geom_smooth(method = "lm")
f
f <- ggplot(aes(x = PokemonGo_Relate.Behaviour, y = PhysicalActivity), data = Pok_Grouped) +
geom_smooth(method = "lm", formula = y ~ x + I(x^2))
f
f <- ggplot(aes(x = PokemonGo_Relate.Behaviour, y = PhysicalActivity), data = Pok_Grouped) +
geom_smooth(method = "lm")
f
, formula = y ~ x + I(x^2)
f <- ggplot(aes(x = PokemonGo_Relate.Behaviour, y = PhysicalActivity), data = Pok_Grouped) +
geom_smooth(method = "lm", formula = y ~ x + I(x^2))
f
summary(Pok.Linear)
summary(Pok.Linear4)
autoplot(Pok.Linear4)
plot(Pok.Linear4)
dev.off()
par(mfrow = c(2, 2))
plot(Pok.Linear4)
#Performing step-wise regression on Pok.Linear model using stepAIC()
stepAIC(Pok.Linear)
#Creating a new model selected using stepAIC()
Pok.Linear_selected <- lm(PhysicalActivity ~ I(education*age) + I(Attitude^2) + I(PokemonGo_Relate.Behaviour^2) + I(education*Attitude) + Gender + PokemonGo_Relate.Behaviour + PokemonGo_AppUsage, data=Pok_Grouped)
summary(Pok.Linear_selected)
#Creating a new model selected using stepAIC()
Pok.Linear_selected <- Gender + PokemonGo_Relate.Behaviour + PokemonGo_AppUsage + lm(PhysicalActivity ~ I(education*age) + I(Attitude^2) + I(PokemonGo_Relate.Behaviour^2) + I(education*Attitude), data=Pok_Grouped)
#Performing step-wise regression on Pok.Linear model using stepAIC()
stepAIC(Pok.Linear)
#Creating a new model selected using stepAIC()
Pok.Linear_selected <- lm(PhysicalActivity ~ Gender + PokemonGo_Relate.Behaviour + PokemonGo_AppUsage + I(education*age) + I(Attitude^2) + I(PokemonGo_Relate.Behaviour^2) + I(education*Attitude), data=Pok_Grouped)
summary(Pok.Linear_selected)
#Performing step-wise regression on Pok.Linear model using stepAIC()
stepAIC(Pok.Linear)
#Performing step-wise regression on Pok.Linear model using stepAIC()
stepAIC(Pok.Linear)
#Creating a new model selected using stepAIC()
Pok.Linear_selected <- lm(PhysicalActivity ~ Gender + PokemonGo_Relate.Behaviour
+ PokemonGo_AppUsage + I(Attitude) +
I(PokemonGo_Relate.Behaviour^2) + I(age*education) +
I(education*Attitude), data=Pok_Grouped)
summary(Pok.Linear_selected)
AIC(Pok.Linear_selected)
#Creating a new model selected using stepAIC()
Pok.Linear_selected <- lm(PhysicalActivity ~ Gender + PokemonGo_Relate.Behaviour
+ PokemonGo_AppUsage + I(Attitude) +
I(age*education) + I(education*Attitude),
data=Pok_Grouped)
summary(Pok.Linear_selected)
AIC(Pok.Linear_selected)
# quadratic term checking
ggplot(aes(x = PokemonGo_Relate.Behaviour, y = PhysicalActivity), data = Pok_Grouped) +
geom_smooth(method = "lm", formula = y ~ x + I(x^2))
summary(Pok.Linear_selected)
#Performing step-wise regression on Pok.Linear model using stepAIC()
stepAIC(Pok.Linear)
#Creating a new model selected using stepAIC()
Pok.Linear_selected <- lm(PhysicalActivity ~ Gender + PokemonGo_Relate.Behaviour
+ PokemonGo_AppUsage + I(Attitude^2) +
I(PokemonGo_Relate.Behaviour^2) +
I(age*education) + I(education*Attitude),
data=Pok_Grouped)
summary(Pok.Linear_selected)
summary(Pok.Linear_selected)
AIC(Pok.Linear_selected)
anova(Pok.Linear_selected)
#Removing insignificant variable from Pok.Linear4 model
Pok.Linear_selected2 <- lm(PhysicalActivity ~ Gender + PokemonGo_Relate.Behaviour
+ PokemonGo_AppUsage + I(Attitude^2) +
I(age*education) + I(education*Attitude),
data=Pok_Grouped)
summary(Pok.Linear5)
summary(Pok.Linear_selected2)
AIC(Pok.Linear_selected2)
# quadratic term checking
ggplot(aes(x = PokemonGo_Relate.Behaviour, y = PhysicalActivity), data = Pok_Grouped) +
geom_smooth(method = "lm", formula = y ~ x + I(x^2))
# quadratic term checking
ggplot(aes(x = PokemonGo_Relate.Behaviour, y = PhysicalActivity), data = Pok_Grouped) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x + I(x^2))
# quadratic term checking
ggplot(aes(x = PokemonGo_Relate.Behaviour, y = PhysicalActivity), data = Pok_Grouped) +
geom_point() +
geom_smooth(method = "loess", formula = y ~ x + I(x^2))
# quadratic term checking
ggplot(aes(x = PokemonGo_Relate.Behaviour, y = PhysicalActivity), data = Pok_Grouped) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x + I(x^2))
# quadratic term checking
ggplot(aes(x = PokemonGo_Relate.Behaviour, y = PhysicalActivity), data = Pok_Grouped) +
geom_jitter() +
geom_smooth(method = "lm", formula = y ~ x + I(x^2))
summary(Pok.Linear_selected)
AIC(Pok.Linear_selected)
AIC(Pok.Linear_selected2)
#Performing step-wise regression on Pok.Linear model using stepAIC()
step(Pok.Linear)
#Performing step-wise regression on Pok.Linear model using stepAIC()
stepAIC(Pok.Linear)
#Creating a new model selected using stepAIC()
Pok.Linear_selected <- lm(PhysicalActivity ~ Gender + age + education + Attitude +
PokemonGo_AppUsage+
PokemonGo_Relate.Behaviour
+ I(Attitude^2) +
I(PokemonGo_Relate.Behaviour^2) +
I(age*education) + I(education*Attitude),
data=Pok_Grouped)
summary(Pok.Linear_selected)
#Removing insignificant variable from Pok.Linear_selected model
Pok.Linear_selected2 <- lm(PhysicalActivity ~ Gender + PokemonGo_Relate.Behaviour
+ PokemonGo_AppUsage + I(Attitude^2) +
I(age*education) + I(education*Attitude),
data=Pok_Grouped)
summary(Pok.Linear_selected2)
#Performing step-wise regression on Pok.Linear model using stepAIC()
stepAIC(Pok.Linear)
#Performing step-wise regression on Pok.Linear model using stepAIC()
new <- stepAIC(Pok.Linear)
summary(new)
#Creating a new model selected using stepAIC()
Pok.Linear_selected <- lm(PhysicalActivity ~ Gender + PokemonGo_AppUsage+
PokemonGo_Relate.Behaviour
+ I(Attitude^2) +
I(PokemonGo_Relate.Behaviour^2) +
I(age*education) + I(education*Attitude),
data=Pok_Grouped)
summary(Pok.Linear_selected)
summary(new)
# draft
#Performing step-wise regression on Pok.Linear model using ols_step_both_aic()
library(olsrr)
ols_step_both_p(Pok.Linear)
ols_step_backward_p(Pok.Linear)
ols_step_forward_p(Pok.Linear)
ols_step_forward_aic(Pok.Linear)
#Creating a new model selected using ols_step_both_aic()
Pok.Linear2 <- lm(PhysicalActivity ~ I(Attitude * PokemonGo_Relate.Behaviour) + PokemonGo_AppUsage + I(education*Gender) + age + I(age*Attitude) +
PokemonGo_Relate.Behaviour + I(social_sharing * PokemonGo_Relate.Behaviour), data=Pok_Grouped)
ols_step_forward_aic(Pok.Linear)
ols_step_backward_aic(Pok.Linear)
ols_step_both_aic(Pok.Linear)
###Linear model###
Pok.Linear <- lm(PhysicalActivity ~ .^2,
data=Pok_Grouped)
summary(Pok.Linear)
# draft
#Performing step-wise regression on Pok.Linear model using ols_step_both_aic()
library(olsrr)
ols_step_both_aic(Pok.Linear)
#Creating a new model selected using ols_step_both_aic()
Pok.Linear2 <- lm(PhysicalActivity ~ I(Attitude * PokemonGo_Relate.Behaviour) + PokemonGo_AppUsage + I(education*Gender) +
age + I(age*Attitude) +
PokemonGo_Relate.Behaviour + I(social_sharing * PokemonGo_Relate.Behaviour), data=Pok_Grouped)
summary(Pok.Linear2)
ols_step_both_aic(Pok.Linear)
###Linear model###
Pok.Linear <- lm(PhysicalActivity ~ .^2 + I(age^2) +
+ I(Attitude^2) +
I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
summary(Pok.Linear)
ols_step_both_aic(Pok.Linear)
#Creating a new model selected using ols_step_both_aic()
Pok.Linear2 <- lm(PhysicalActivity ~ I(Attitude * PokemonGo_Relate.Behaviour) + PokemonGo_AppUsage + I(education*Gender) +
age + I(age*Attitude) +
PokemonGo_Relate.Behaviour + I(social_sharing * PokemonGo_Relate.Behaviour), data=Pok_Grouped)
summary(Pok.Linear2)
library(moderndive)
get_regression_table(Pok.Linear2)
# justification for interaction between age and education level
ggplot(Pok_Grouped, aes(x = PokemonGo_Relate.Behaviour, y = PhysicalActivity, color = as.factor(social_sharing))) +
geom_jitter() +
labs(x = "Age", y = "Amount of Physical Activity", color = "education level") +
geom_smooth(method = "lm", se = FALSE)
ols_step_both_aic(Pok.Linear)
###Linear model###
Pok.Linear <- lm(PhysicalActivity ~ .^2 + I(age^2) +
+ I(Attitude^2) +
I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
summary(Pok.Linear)
anova(Pok.Linear)
AIC(Pok.Linear)
#Performing step-wise regression on Pok.Linear model using ols_step_both_aic()
library(olsrr)
ols_step_both_aic(Pok.Linear)
#Creating a new model selected using ols_step_both_aic()
Select_Pok.Linear <- lm(PhysicalActivity ~ I(Attitude * PokemonGo_Relate.Behaviour) +
PokemonGo_AppUsage + I(education*Gender) + age +
I(age*Attitude) + PokemonGo_Relate.Behaviour +
I(social_sharing * PokemonGo_Relate.Behaviour), data=Pok_Grouped)
summary(Select_Pok.Linear)
ols_step_both_aic(Pok.Linear)
#Creating a new model selected using ols_step_both_aic()
Select_Pok.Linear <- lm(PhysicalActivity ~ I(Attitude * PokemonGo_Relate.Behaviour) +
PokemonGo_AppUsage + I(education*Gender) + age +
I(age*Attitude) + PokemonGo_Relate.Behaviour +
I(social_sharing * PokemonGo_Relate.Behaviour), data=Pok_Grouped)
summary(Select_Pok.Linear)
AIC(Select_Pok.Linear)
# obtain final model
library(moderndive)
get_regression_table(Select_Pok.Linear)
#Removing insignificant variable from Pok.Linear2 model
Final_Pok.Linear <- lm(PhysicalActivity ~ age + PokemonGo_AppUsage +
PokemonGo_Relate.Behaviour + I(education*Gender) +
I(social_sharing*PokemonGo_Relate.Behaviour) +
I(age*Attitude), data=Pok_Grouped)
summary(Final_Pok.Linear)
#Creating a new model selected using ols_step_both_aic()
Select_Pok.Linear <- lm(PhysicalActivity ~ I(Attitude * PokemonGo_Relate.Behaviour) +
PokemonGo_AppUsage + I(education*Gender) + age +
I(age*Attitude) + PokemonGo_Relate.Behaviour +
I(social_sharing * PokemonGo_Relate.Behaviour), data=Pok_Grouped)
ols_step_both_aic(Pok.Linear)
summary(Select_Pok.Linear)
#Removing insignificant variable from Pok.Linear2 model
Final_Pok.Linear <- lm(PhysicalActivity ~ age + PokemonGo_AppUsage +
PokemonGo_Relate.Behaviour + I(education*Gender) +
I(social_sharing*PokemonGo_Relate.Behaviour) +
I(age*Attitude), data=Pok_Grouped)
summary(Final_Pok.Linear)
AIC(Final_Pok.Linear)
###Linear model###
Pok.Linear <- lm(PhysicalActivity ~ .^2 + I(age^2) +
+ I(Attitude^2) +
I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
summary(Pok.Linear)
anova(Pok.Linear)
AIC(Pok.Linear)
#Performing step-wise regression on Pok.Linear model using ols_step_both_aic()
library(olsrr)
ols_step_both_aic(Pok.Linear)
#Creating a new model selected using ols_step_both_aic()
Select_Pok.Linear <- lm(PhysicalActivity ~ I(Attitude * PokemonGo_Relate.Behaviour) +
PokemonGo_AppUsage + I(education*Gender) + age +
I(age*Attitude) + PokemonGo_Relate.Behaviour +
I(social_sharing * PokemonGo_Relate.Behaviour), data=Pok_Grouped)
summary(Select_Pok.Linear)
#Creating a new model selected using ols_step_both_aic()
Select_Pok.Linear <- lm(PhysicalActivity ~ I(Attitude * PokemonGo_Relate.Behaviour) +
PokemonGo_AppUsage + I(education*Gender) + age +
I(age*Attitude) + PokemonGo_Relate.Behaviour +
I(social_sharing * PokemonGo_Relate.Behaviour), data=Pok_Grouped)
summary(Select_Pok.Linear)
summary(Select_Pok.Linear)
#Creating a new model selected using ols_step_both_aic()
Select_Pok.Linear <- lm(PhysicalActivity ~  age + PokemonGo_AppUsage +
PokemonGo_Relate.Behaviour + I(education*Gender) +
I(age*Attitude) + I(Attitude*PokemonGo_Relate.Behaviour) +
I(social_sharing*PokemonGo_Relate.Behaviour), data=Pok_Grouped)
summary(Select_Pok.Linear)
get_regression_table(Select_Pok.Linear)
# justification for interaction between PokemonGo_Relate.Behaviour and social_sharing
ggplot(Pok_Grouped, aes(x = PokemonGo_Relate.Behaviour, y = PhysicalActivity,
color = as.factor(social_sharing))) +
geom_jitter() +
labs(x = "Pokemon Go Related Behaviour", y = "Amount of Physical Activity",
color = "social sharing") +
geom_smooth(method = "lm", se = FALSE)
#Removing insignificant variable from Pok.Linear2 model
Final_Pok.Linear <- lm(PhysicalActivity ~ age + PokemonGo_AppUsage +
PokemonGo_Relate.Behaviour + I(education*Gender) +
I(social_sharing*PokemonGo_Relate.Behaviour) +
I(age*Attitude), data=Pok_Grouped)
summary(Final_Pok.Linear)
AIC(Final_Pok.Linear)
AIC(Select_Pok.Linear)
AIC(Final_Pok.Linear)
summary(Final_Pok.Linear)
AIC(Final_Pok.Linear)
# model assumption checking
par(mfrow = c(2, 2))
plot(Final_Pok.Linear)
summary(Final_Pok.Linear)
#Removing insignificant variable from Pok.Linear2 model
Final_Pok.Linear <- lm(PhysicalActivity ~ age + PokemonGo_AppUsage +
PokemonGo_Relate.Behaviour + I(education*Gender) +
I(age*Attitude)+
I(social_sharing*PokemonGo_Relate.Behaviour)
, data=Pok_Grouped)
summary(Final_Pok.Linear)
#Removing insignificant variable from Pok.Linear2 model
Final_Pok.Linear <- lm(PhysicalActivity ~ age + PokemonGo_AppUsage +
PokemonGo_Relate.Behaviour + I(education*Gender) +
I(age*Attitude)+
I(social_sharing*PokemonGo_Relate.Behaviour)
, data=Pok_Grouped)
summary(Final_Pok.Linear)
AIC(Final_Pok.Linear)
# O2: relations between PokemonGo_AppUsage and PokemonGo_Relate.Behaviour
# model for further comparison
Comp_Pok.Linear <- lm(PhysicalActivity ~ age + PokemonGo_AppUsage +
I(education*Gender) +
I(age*Attitude), data=Pok_Grouped)
# O2: relations between PokemonGo_AppUsage and PokemonGo_Relate.Behaviour
# model for further comparison
Comp_Pok.Linear <- lm(PhysicalActivity ~ age + PokemonGo_AppUsage +
I(education*Gender) +
I(age*Attitude), data=Pok_Grouped)
summary(Comp_Pok.Linear)
summary(Comp_Pok.Linear)
# o3
summary(Final_Pok.Linear)
# o3
summary(Final_Pok.Linear)
library(ggpubr)
# import necessary libraries
library(dplyr)
library(psych)
library(olsrr)
library(car)
library(mgcv)
####################################
###Data Observation and Cleansing###
####################################
# loading dataset
load("pokemon.Rdata")
# observe data
head(pok,3)
# primary observe of data
summary(pok)
# checking number of missing value
sum(is.na(pok))
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
#@ This dataset is really good, without error or missing value
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
#################################
###Preparation of Grouped data###
#################################
###convert variables into numeric values###
pok_new[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
summary(pok_new)
# Calculate Cronbach's Alpha for grouping justification
## Attitude
alpha(pok_new[7:18], check.keys=TRUE)
# Physical Behaviour
alpha(pok_new[19:24], check.keys=TRUE)
# Pokemon Go related behw=aviour Behviour
alpha(pok_new[27:29], check.keys=TRUE)
#@ Since all alpha scores of targeted series of variables are "Acceptable",
#@ we grouped them together
# variable grouping
Attitude <- rowMeans(pok_new[7:18])
Behaviour <- rowMeans(pok_new[19:24])
PokemonBehaviour <- rowMeans(pok_new[27:29])
# create new dataset with grouped data
Pok_Grouped <- pok_new[c(4:6)]
Pok_Grouped$Attitude <- Attitude
Pok_Grouped$PhysicalActivity <- Behaviour
Pok_Grouped$PokemonGo_AppUsage <- pok_new$app_usage_PokemonGoApp_pokemonusage1
Pok_Grouped$social_sharing <- pok_new$social_sharing
Pok_Grouped$PokemonGo_Relate.Behaviour <- PokemonBehaviour
# show the first few lines of the dataset
head(Pok_Grouped)
# count number of records
count(Pok_Grouped)
########################
###Data Visualisation###
########################
# libraries required for visualisation
library(ggplot2)
library(GGally)
require(foreign)
require(MASS)
require(Hmisc)
require(reshape2)
library(ggpubr)
###Relations visualisation###
# scatter plot
ggpairs(Pok_Grouped)
a <- ggplot(aes(x = age, y = PhysicalActivity), data = Pok_Grouped) +
geom_smooth(method = "lm")
b <- ggplot(aes(x = education, y = PhysicalActivity), data = Pok_Grouped) +
geom_smooth(method = "lm")
c <- ggplot(aes(x = Attitude, y = PhysicalActivity), data = Pok_Grouped) +
geom_smooth(method = "lm")
d <- ggplot(aes(x = PokemonGo_AppUsage, y = PhysicalActivity), data = Pok_Grouped) +
geom_smooth(method = "lm")
e <- ggplot(aes(x = social_sharing, y = PhysicalActivity), data = Pok_Grouped) +
geom_smooth(method = "lm")
f <- ggplot(aes(x = PokemonGo_Relate.Behaviour, y = PhysicalActivity), data = Pok_Grouped) +
geom_smooth(method = "lm", formula = y ~ x + I(x^2))
ggarrange(a, b, c, d, e, f,
ncol = 3, nrow = 2)
a <- ggplot(aes(x = age, y = PhysicalActivity), data = Pok_Grouped) +
gemo_point()+
geom_smooth(method = "lm")
a
a <- ggplot(aes(x = age, y = PhysicalActivity), data = Pok_Grouped) +
gemo_jitter()+
geom_smooth(method = "lm")
# libraries required for visualisation
library(ggplot2)
library(GGally)
require(foreign)
require(MASS)
require(Hmisc)
require(reshape2)
library(ggpubr)
a <- ggplot(aes(x = age, y = PhysicalActivity), data = Pok_Grouped) +
gemo_jitter()+
geom_smooth(method = "lm")
a <- ggplot(aes(x = age, y = PhysicalActivity), data = Pok_Grouped) +
geom_jitter()+
geom_smooth(method = "lm")
a
a <- ggplot(aes(x = age, y = PhysicalActivity), data = Pok_Grouped) +
geom_point()+
geom_smooth(method = "lm")
a
a <- ggplot(aes(x = age, y = PhysicalActivity), data = Pok_Grouped) +
geom_jitter()+
geom_smooth(method = "lm")
a
a <- ggplot(aes(x = age, y = PhysicalActivity), data = Pok_Grouped) +
geom_jitter()+
geom_smooth(method = "lm")
b <- ggplot(aes(x = education, y = PhysicalActivity), data = Pok_Grouped) +
geom_jitter()+
geom_smooth(method = "lm")
c <- ggplot(aes(x = Attitude, y = PhysicalActivity), data = Pok_Grouped) +
geom_jitter()+
geom_smooth(method = "lm")
d <- ggplot(aes(x = PokemonGo_AppUsage, y = PhysicalActivity), data = Pok_Grouped) +
geom_smooth(method = "lm")
e <- ggplot(aes(x = social_sharing, y = PhysicalActivity), data = Pok_Grouped) +
geom_jitter()+
geom_smooth(method = "lm")
f <- ggplot(aes(x = PokemonGo_Relate.Behaviour, y = PhysicalActivity), data = Pok_Grouped) +
geom_jitter()+
geom_smooth(method = "lm", formula = y ~ x + I(x^2))
ggarrange(a, b, c, d, e, f,
ncol = 3, nrow = 2)
dev.off()
a <- ggplot(aes(x = age, y = PhysicalActivity), data = Pok_Grouped) +
geom_jitter()+
geom_smooth(method = "lm")
b <- ggplot(aes(x = education, y = PhysicalActivity), data = Pok_Grouped) +
geom_jitter()+
geom_smooth(method = "lm")
c <- ggplot(aes(x = Attitude, y = PhysicalActivity), data = Pok_Grouped) +
geom_jitter()+
geom_smooth(method = "lm")
d <- ggplot(aes(x = PokemonGo_AppUsage, y = PhysicalActivity), data = Pok_Grouped) +
geom_smooth(method = "lm")
e <- ggplot(aes(x = social_sharing, y = PhysicalActivity), data = Pok_Grouped) +
geom_jitter()+
geom_smooth(method = "lm")
f <- ggplot(aes(x = PokemonGo_Relate.Behaviour, y = PhysicalActivity), data = Pok_Grouped) +
geom_jitter()+
geom_smooth(method = "lm", formula = y ~ x + I(x^2))
ggarrange(a, b, c, d, e, f, ncol = 3, nrow = 2)
