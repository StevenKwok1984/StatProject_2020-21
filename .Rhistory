+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PhysicalActivity^2),
fammily=Gamma(), data=Pok_Grouped)
#o2
Pok.Linear_o2 <- glm(PokemonGo_Relate.Behaviour ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PhysicalActivity^2),
family=Gamma(), data=Pok_Grouped)
summary(Pok.Linear_o2)
#o2
Pok.Linear_o2 <- glm(PokemonGo_Relate.Behaviour ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PhysicalActivity^2),
family=Gamma(), data=Pok_Grouped)
summary(Pok.Linear_o2)
## variable selection
# use multiple for discovering best model
O2_Selected_Pok.Linear <- stepAIC(Pok.Linear_o2)
# model observation
summary(O2_Selected_Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(O2_Selected_Pok.Linear)
#@ female have more positive attitude, but not so obvious with overlapping
boxplot(Attitude~education, data=Pok_Grouped)
abline(h=5.33, col = "Red", lty = 5)
#@ higer education is usually higher than first three
dev.off()
#@ female have more positive attitude, but not so obvious with overlapping
boxplot(Attitude~education, data=Pok_Grouped)
abline(h=5.33, col = "Red", lty = 5)
#@ female have more positive attitude, but not so obvious with overlapping
boxplot(Attitude~education, data=Pok_Grouped + main="Main title")
#@ female have more positive attitude, but not so obvious with overlapping
boxplot(Attitude~education, data=Pok_Grouped, main="Main title")
#@ female have more positive attitude, but not so obvious with overlapping
boxplot(Attitude~education, data=Pok_Grouped,
main="relations between education and Attitude ") +
abline(h=5.33, col = "Red", lty = 5)
#@ female have more positive attitude, but not so obvious with overlapping
boxplot(Attitude~education, data=Pok_Grouped,
main="relations between education and Attitude ")
abline(h=5.33, col = "Red", lty = 5)
#@ seems female have higher average education level
boxplot(Attitude~Gender, data=Pok_Grouped, names=c("Female", "Male"))
#@ seems female have higher average education level
boxplot(Attitude~Gender, data=Pok_Grouped, names=c("Female", "Male"),
main="relations between Gender and Attitude ")
dev.off()
# assumption checking
par(mfrow = c(2, 2))
plot(Selected_Pok.Linear)
# o2
Pok.Linear <- glm(PokemonGo_Relate.Behaviour ~ PokemonGo_AppUsage + I(PokemonGo_AppUsage),
data=Pok_Grouped)
summary(Pok.Linear)
# o2
Pok.Test <- glm(PokemonGo_Relate.Behaviour ~ PokemonGo_AppUsage + I(PokemonGo_AppUsage),
data=Pok_Grouped)
summary(Pok.Test)
par(mfrow = c(2, 2))
plot(Pok.Test)
# o2
Pok.Test <- glm(PokemonGo_Relate.Behaviour ~ PokemonGo_AppUsage + I(PokemonGo_AppUsage^2),
data=Pok_Grouped)
summary(Pok.Test)
par(mfrow = c(2, 2))
plot(Pok.Test)
# o2
Pok.Test <- glm(log(PokemonGo_Relate.Behaviour) ~ PokemonGo_AppUsage + I(PokemonGo_AppUsage^2),
data=Pok_Grouped)
summary(Pok.Test)
par(mfrow = c(2, 2))
plot(Pok.Test)
par(mfrow = c(2, 2))
plot(Pok.Test)
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Selected_Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Selected_Pok.Linear)
# o2
Pok.Test <- glm(log(PokemonGo_Relate.Behaviour) ~ PokemonGo_AppUsage + I(PokemonGo_AppUsage^2),
data=Pok_Grouped)
summary(Pok.Test)
par(mfrow = c(2, 2))
plot(Pok.Test)
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Test)
# model observation
summary(Selected_Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Selected_Pok.Linear)
vic(Pok_Grouped$PhysicalActivity, Pok_Grouped$PokemonGo_AppUsage, Pok_Grouped$PokemonGo_Relate.Behaviour)
car::vic(Pok_Grouped$PhysicalActivity, Pok_Grouped$PokemonGo_AppUsage, Pok_Grouped$PokemonGo_Relate.Behaviour)
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Selected_Pok.Linear)
###Linear model###
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
summary(Pok.Linear)
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Selected_Pok.Linear)
###Linear model for comparison###
Pok.Linear <- glm(PhysicalActivity ~ (. -PokemonGo_Relate.Behaviour)^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2),
data=Pok_Grouped)
summary(Pok.Linear)
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Selected_Pok.Linear)
summary(Pok.Linear)
###Linear model for comparison###
Pok.Linear <- glm(PhysicalActivity ~ (. -PokemonGo_Relate.Behaviour)^2 + I(age^2) + I(education^2) +
+ I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2),
data=Pok_Grouped)
summary(Pok.Linear)
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
###Linear model###
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
summary(Pok.Linear)
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Selected_Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Selected_Pok.Linear)
summary(Pok.Linear)
###Linear model###
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
summary(Pok.Linear)
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Selected_Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Selected_Pok.Linear)
###Linear model###
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
summary(Pok.Linear)
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Selected_Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Selected_Pok.Linear)
Pok.Linear <- glm(PhysicalActivity ~ .^2,
data=Pok_Grouped)
summary(Pok.Linear)
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Selected_Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Selected_Pok.Linear)
###Linear model###
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
summary(Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Selected_Pok.Linear)
###Linear model###
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
summary(Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Pok.Linear)
dev.off()
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Selected_Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Selected_Pok.Linear)
###Linear model###
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
summary(Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Pok.Linear)
Pok.Linear <- glm(PhysicalActivity ~ .^2,
data=Pok_Grouped)
# assumption checking
par(mfrow = c(2, 2))
plot(Pok.Linear)
Pok.Linear <- glm(PhysicalActivity ~ .^2,
data=Pok_Grouped)
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Selected_Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Selected_Pok.Linear)
###Linear model###
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) +
I(social_sharing^2) + I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
###Linear model###
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) +
I(social_sharing^2) + I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
summary(Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Pok.Linear)
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Selected_Pok.Linear)
###Linear model###
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + ,
data=Pok_Grouped)
###Linear model###
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2),
data=Pok_Grouped)
# assumption checking
par(mfrow = c(2, 2))
plot(Pok.Linear)
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Selected_Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Selected_Pok.Linear)
###Linear model###
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
# assumption checking
par(mfrow = c(2, 2))
plot(Pok.Linear)
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Selected_Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Selected_Pok.Linear)
###Linear model###
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
# assumption checking
par(mfrow = c(2, 2))
plot(Pok.Linear)
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Selected_Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Selected_Pok.Linear)
Selected_Pok.Linear$coefficients
## variable selection
# use multiple for discovering best model
Selected_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Selected_Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Selected_Pok.Linear)
# comparison
Comp_Pok.Linear <- glm(formula = PhysicalActivity ~ age + education + Gender +
Attitude + PokemonGo_AppUsage +
PokemonGo_Relate.Behaviour + I(Attitude^2) +
I(PokemonGo_Relate.Behaviour^2) + age:education +
education:Attitude, data = Pok_Grouped)
# comparison
Comp_Pok.Linear <- glm(formula = PhysicalActivity ~ age + education + Gender +
Attitude + PokemonGo_AppUsage +
I(Attitude^2) + age:education +
education:Attitude, data = Pok_Grouped)
summary(Comp_Pok.Linear )
## variable selection
# use multiple for discovering best model
Final_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Final_Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Final_Pok.Linear)
###Linear model###
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
# assumption checking
par(mfrow = c(2, 2))
plot(Pok.Linear)
## variable selection
# use multiple for discovering best model
Final_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Final_Pok.Linear)
# assumption checking
par(mfrow = c(2, 2))
plot(Final_Pok.Linear)
summary(Comp_Pok.Linear)
View(pok)
knitr::opts_chunk$set(echo = FALSE)
par(mfrow = c(2, 2))
plot(Pok.Linear)
## variable selection
# use multiple for discovering best model
Final_Pok.Linear <- stepAIC(Pok.Linear)
# import library required
library(dplyr)
library(psych)
library(olsrr)
library(car)
library(mgcv)
####################################
###Data Observation and Cleansing###
####################################
# loading dataset
load("pokemon.Rdata")
# observe data
head(pok,3)
# primary observe of data
summary(pok)
# checking number of missing value
sum(is.na(pok))
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
#@ This dataset is really good, without error or missing value
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
#################################
###Preparation of Grouped data###
#################################
###convert variables into numeric values###
pok_new[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
summary(pok_new)
###Justify the grouping###
# Calculate Cronbach's Alpha
## Attitude & StepsAttitude
alpha(pok_new[7:18], check.keys=TRUE)
# Physical Behaviour
alpha(pok_new[19:24], check.keys=TRUE)
# Pokemon Behviour
alpha(pok_new[27:29], check.keys=TRUE)
#@ Since alpha of behaviour and Pokemon behaviour are "Acceptable"
#@ we group them together
# variable grouping
Attitude <- rowMeans(pok_new[7:18])
Behaviour <- rowMeans(pok_new[19:24])
PokemonBehaviour <- rowMeans(pok_new[27:29])
# create new dataset
Pok_Grouped <- pok_new[c(4:6)]
Pok_Grouped$Attitude <- Attitude
Pok_Grouped$PhysicalActivity <- Behaviour
Pok_Grouped$PokemonGo_AppUsage <- pok_new$app_usage_PokemonGoApp_pokemonusage1
Pok_Grouped$social_sharing <- pok_new$social_sharing
Pok_Grouped$PokemonGo_Relate.Behaviour <- PokemonBehaviour
head(Pok_Grouped)
summary(Pok_Grouped)
pok$PokemonPastBehavior_pokPast4_pokemonusage_NOT_USED
########################
###Data Visualisation###
########################
# libraries required
library(ggplot2)
library(GGally)
require(foreign)
require(MASS)
require(Hmisc)
require(reshape2)
###Relations visualisation###
ggpairs(Pok_Grouped)
par(mfrow = c(3, 3))
for(i in 1:8){
if(i != 2)
boxplot(Pok_Grouped[,i]~education, data=Pok_Grouped)
}
for(i in 1:8){
if(i != 3)
boxplot(Pok_Grouped[,i]~Gender, data=Pok_Grouped)
}
########################
###Model Constructing###
########################
###Linear model###
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
# assumption checking
par(mfrow = c(2, 2))
plot(Pok.Linear)
dev.off()
## variable selection
# use multiple for discovering best model
Final_Pok.Linear <- stepAIC(Pok.Linear)
# model observation
summary(Final_Pok.Linear)
library(dplyr)
library(psych)
library(ggplot2)
library(GGally)
require(foreign)
require(MASS)
require(Hmisc)
require(reshape2)
# loading dataset
load("pokemon.Rdata")
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
pok_new[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
# variable grouping
Attitude <- rowMeans(pok_new[7:18])
Behaviour <- rowMeans(pok_new[19:24])
PokemonBehaviour <- rowMeans(pok_new[27:29])
# create new dataset
Pok_Grouped <- pok_new[c(4:6)]
Pok_Grouped$Attitude <- Attitude
Pok_Grouped$PhyscialActivity <- Behaviour
Pok_Grouped$PokemonGo_AppUsage <- pok_new$app_usage_PokemonGoApp_pokemonusage1
Pok_Grouped$social_sharing <- pok_new$social_sharing
Pok_Grouped$PokemonGo_Relate.Behaviour <- PokemonBehaviour
summary(Pok_Grouped)
# assumption checking
ggpairs(Pok_Grouped)
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
# create new dataset
Pok_Grouped <- pok_new[c(4:6)]
Pok_Grouped$Attitude <- Attitude
Pok_Grouped$PhysicalActivity <- Behaviour
Pok_Grouped$PokemonGo_AppUsage <- pok_new$app_usage_PokemonGoApp_pokemonusage1
Pok_Grouped$social_sharing <- pok_new$social_sharing
Pok_Grouped$PokemonGo_Relate.Behaviour <- PokemonBehaviour
summary(Pok_Grouped)
# model observation
summary(Final_Pok.Linear)
Pok.Linear <- glm(PhysicalActivity ~ .^2 + I(age^2) + I(education^2) +
+ I(Gender^2) + I(Attitude^2) + I(PokemonGo_AppUsage^2) +
I(social_sharing^2) + I(PokemonGo_Relate.Behaviour^2),
data=Pok_Grouped)
par(mfrow = c(2, 2))
plot(Pok.Linear)
par(mfrow = c(2, 2))
plot(Pok.Linear)
par(mfrow = c(2, 2))
plot(Pok.Linear)
