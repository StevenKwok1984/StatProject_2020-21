alpha(pok_new[7:12], check.keys=TRUE)
# steps Attitude
alpha(pok_new[13:18], check.keys=TRUE)
# Behaviour
alpha(pok_new[19:24], check.keys=TRUE)
library(reshape2)
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12], check.keys=TRUE)
# steps Attitude
alpha(pok_new[13:18], check.keys=TRUE)
library(foreign)
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12], check.keys=TRUE)
# import library required
library(dplyr)
library(psych)
library(ggplot2)
library(MASS)
library(olsrr)
library(GGally)
library(Hmisc)
library(reshape2)
library(foreign)
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12], check.keys=TRUE)
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12])
# import library required
library(dplyr)
library(psych)
library(ggplot2)
library(olsrr)
library(GGally)
require(foreign)
require(MASS)
require(Hmisc)
require(reshape2)
# The first observation
load("pokemon.Rdata")
head(pok,1)
# primary observe of data
summary(pok)
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
pok_age_l100 <- pok[pok$age >100,]
pok_age_l100
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
###convert variables into numeric values###
pok_new[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
summary(pok_new)
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12], check.keys=TRUE)
# steps Attitude
alpha(pok_new[13:18], check.keys=TRUE)
# Behaviour
alpha(pok_new[19:24], check.keys=TRUE)
# Pokemon Behviour
alpha(pok_new[27:29], check.keys=TRUE)
# variable grouping
Attitude <- rowMeans(pok_new[7:12])
# variable grouping
Attitude <- rowMeans(pok_new[7:12])
StepAttitude <- rowMeans(pok_new[13:18])
Behqviour <- rowMeans(pok_new[19:24])
PokemonBehaviour <- rowMeans(pok_new[27:29])
# create new dataset
Pok_Grouped <- pok_new[c(4:6)]
Pok_Grouped$Attitude <- Attitude
Pok_Grouped$StepsAttitude <- StepAttitude
Pok_Grouped$PhyscialActivity <- Behaviour
Pok_Grouped$PokemonGo_AppUsage <- pok_new$app_usage_PokemonGoApp_pokemonusage1
Pok_Grouped$social_sharing <- pok_new$social_sharing
Pok_Grouped$PokemonRelate_Behaviour <- PokemonBehaviour
head(Pok_Grouped)
summary(Pok_Grouped)
ggpairs(Pok_Grouped)
boxplot(PhyscialActivity~education,
data=Pok_Grouped,
main="Different boxplots for gender",
xlab="Month Number",
ylab="Amount of Physical Activity"
)
boxplot(PhyscialActivity~Gender,
data=Pok_Grouped,
main="Different boxplots for Education Level",
xlab="Education Level",
ylab="Amount of Physical Activity"
)
###Simple linear model###
# Relations between all variables and Physical Acticity
Pok_Linear <- lm(PhyscialActivity ~ . , data = Pok_Grouped)
ols_step_best_subset(Pok_Linear)
##Stepwise Selection
stepwise.Pok_Linear <- stepAIC(Pok_Linear, direction = "both",
trace = TRUE)
stepwise.Pok_Linear
#@ According the AIC criteria, stewise.Pok_Linear model is the best model with
#@ smallest AIC. However, "StepsAttutide" and "Attitude" having the same aspects,
#@ Thus, we should drop one. According to the result, Drop of "Attitude" only cause
#@ small rise, so we drop "Attitude"
Pok_Linear_final <- lm(PhyscialActivity ~ age + education + StepsAttitude +
PokemonGo_AppUsage + PokemonRelate_Behaviour,
data = Pok_Grouped)
summary(Pok_Linear_final)
# import library required
library(psych)
# The first observation
load("pokemon.Rdata")
head(pok,1)
# primary observe of data
summary(pok)
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
pok_age_l100 <- pok[pok$age >100,]
pok_age_l100
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
###convert variables into numeric values###
pok_new[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
summary(pok_new)
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12], check.keys=TRUE)
library(dplyr)
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12], check.keys=TRUE)
# import library required
library(psych)
library(dplyr)
library(ggplot2)
library(olsrr)
library(GGally)
require(foreign)
require(MASS)
require(Hmisc)
require(reshape2)
# The first observation
load("pokemon.Rdata")
head(pok,1)
# primary observe of data
summary(pok)
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
pok_age_l100 <- pok[pok$age >100,]
pok_age_l100
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
###convert variables into numeric values###
pok_new[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
summary(pok_new)
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12], check.keys=TRUE)
# steps Attitude
alpha(pok_new[13:18], check.keys=TRUE)
# Behaviour
alpha(pok_new[19:24], check.keys=TRUE)
# Pokemon Behviour
alpha(pok_new[27:29], check.keys=TRUE)
# import library required
library(dplyr)
library(psych)
# The first observation
load("pokemon.Rdata")
head(pok,1)
# primary observe of data
summary(pok)
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
###convert variables into numeric values###
pok_new[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
summary(pok_new)
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12], check.keys=TRUE)
# libraries required
library(ggplot2)
library(olsrr)
library(GGally)
require(foreign)
require(MASS)
require(Hmisc)
require(reshape2)
# Start plotting
ggpairs(Pok_Grouped)
boxplot(PhyscialActivity~education,
data=Pok_Grouped,
main="Different boxplots for gender",
xlab="Month Number",
ylab="Amount of Physical Activity"
)
boxplot(PhyscialActivity~Gender,
data=Pok_Grouped,
main="Different boxplots for Education Level",
xlab="Education Level",
ylab="Amount of Physical Activity"
)
# libraries required
library(olsrr)
# import library required
library(dplyr)
library(psych)
####################################
###Data Observation and Cleansing###
####################################
# The first observation
load("pokemon.Rdata")
head(pok,1)
# primary observe of data
summary(pok)
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
pok_age_l100 <- pok[pok$age >100,]
pok_age_l100
#@ This dataset is really good, without error or missing value
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
#################################
###Preparation of Grouped data###
#################################
###convert variables into numeric values###
pok_new[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
summary(pok_new)
###Justify the grouping###
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12], check.keys=TRUE)
# steps Attitude
alpha(pok_new[13:18], check.keys=TRUE)
# Behaviour
alpha(pok_new[19:24], check.keys=TRUE)
# Pokemon Behviour
alpha(pok_new[27:29], check.keys=TRUE)
#@ Since alpha of behaviour and Pokemon behaviour are "Acceptable"
#@ we group them together
# variable grouping
Attitude <- rowMeans(pok_new[7:12])
StepAttitude <- rowMeans(pok_new[13:18])
Behqviour <- rowMeans(pok_new[19:24])
PokemonBehaviour <- rowMeans(pok_new[27:29])
# create new dataset
Pok_Grouped <- pok_new[c(4:6)]
Pok_Grouped$Attitude <- Attitude
Pok_Grouped$StepsAttitude <- StepAttitude
Pok_Grouped$PhyscialActivity <- Behaviour
Pok_Grouped$PokemonGo_AppUsage <- pok_new$app_usage_PokemonGoApp_pokemonusage1
Pok_Grouped$social_sharing <- pok_new$social_sharing
Pok_Grouped$PokemonRelate_Behaviour <- PokemonBehaviour
head(Pok_Grouped)
summary(Pok_Grouped)
########################
###Data Visualisation###
########################
# libraries required
library(ggplot2)
library(GGally)
require(foreign)
require(MASS)
require(Hmisc)
require(reshape2)
# Start plotting
ggpairs(Pok_Grouped)
boxplot(PhyscialActivity~education,
data=Pok_Grouped,
main="Different boxplots for gender",
xlab="Month Number",
ylab="Amount of Physical Activity"
)
boxplot(PhyscialActivity~Gender,
data=Pok_Grouped,
main="Different boxplots for Education Level",
xlab="Education Level",
ylab="Amount of Physical Activity"
)
# library required
library(olsrr)
###Simple linear model###
# Relations between all variables and Physical Acticity
Pok_Linear <- lm(PhyscialActivity ~ . , data = Pok_Grouped)
ols_step_best_subset(Pok_Linear)
plot(select_result)
select_result <- ols_step_best_subset(Pok_Linear)
plot(select_result)
select_result <- ols_step_best_subset(Pok_Linear)
plot(select_result)
# Start plotting
ggpairs(log(Pok_Grouped))
# import library required
library(dplyr)
library(psych)
####################################
###Data Observation and Cleansing###
####################################
# The first observation
load("pokemon.Rdata")
head(pok,1)
# primary observe of data
summary(pok)
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
pok_age_l100 <- pok[pok$age >100,]
pok_age_l100
#@ This dataset is really good, without error or missing value
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
#################################
###Preparation of Grouped data###
#################################
###convert variables into numeric values###
pok_new[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
summary(pok_new)
###Justify the grouping###
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12], check.keys=TRUE)
# steps Attitude
alpha(pok_new[13:18], check.keys=TRUE)
# Behaviour
alpha(pok_new[19:24], check.keys=TRUE)
# Pokemon Behviour
alpha(pok_new[27:29], check.keys=TRUE)
#@ Since alpha of behaviour and Pokemon behaviour are "Acceptable"
#@ we group them together
# variable grouping
Attitude <- rowMeans(pok_new[7:12])
StepAttitude <- rowMeans(pok_new[13:18])
Behqviour <- rowMeans(pok_new[19:24])
PokemonBehaviour <- rowMeans(pok_new[27:29])
# create new dataset
Pok_Grouped <- pok_new[c(4:6)]
Pok_Grouped$Attitude <- Attitude
Pok_Grouped$StepsAttitude <- StepAttitude
Pok_Grouped$PhyscialActivity <- Behaviour
Pok_Grouped$PokemonGo_AppUsage <- pok_new$app_usage_PokemonGoApp_pokemonusage1
Pok_Grouped$social_sharing <- pok_new$social_sharing
Pok_Grouped$PokemonRelate_Behaviour <- PokemonBehaviour
head(Pok_Grouped)
summary(Pok_Grouped)
########################
###Data Visualisation###
########################
# libraries required
library(ggplot2)
library(GGally)
require(foreign)
require(MASS)
require(Hmisc)
require(reshape2)
# Start plotting
ggpairs(log(Pok_Grouped))
# checking number of missing value
sum(is.na(pok))
# import library required
library(dplyr)
library(psych)
####################################
###Data Observation and Cleansing###
####################################
# loading dataset
load("pokemon.Rdata")
# observe data
head(pok,3)
# primary observe of data
summary(pok)
# checking number of missing value
sum(is.na(pok))
# checking unreasonable items in age
pok_age_s0 <- pok[pok$age <0,]
pok_age_s0
#@ This dataset is really good, without error or missing value
# However, according to the article, the records where the answer of
# ATTENTION_filter1 is not "Disagree" should be filtered
pok_new <- pok[pok$ATTENTION_filter1=="Disagree",]
pok_new$ATTENTION_filter1 <- NULL
summary(pok_new)
#################################
###Preparation of Grouped data###
#################################
###convert variables into numeric values###
pok_new[,4:30] <- pok_new[,4:30] %>% mutate_if(is.factor,as.numeric)
summary(pok_new)
###Justify the grouping###
# Calculate Cronbach's Alpha
# Attitude
alpha(pok_new[7:12], check.keys=TRUE)
# steps Attitude
alpha(pok_new[13:18], check.keys=TRUE)
# Behaviour
alpha(pok_new[19:24], check.keys=TRUE)
# Pokemon Behviour
alpha(pok_new[27:29], check.keys=TRUE)
#@ Since alpha of behaviour and Pokemon behaviour are "Acceptable"
#@ we group them together
# variable grouping
Attitude <- rowMeans(pok_new[7:12])
StepAttitude <- rowMeans(pok_new[13:18])
Behqviour <- rowMeans(pok_new[19:24])
PokemonBehaviour <- rowMeans(pok_new[27:29])
# create new dataset
Pok_Grouped <- pok_new[c(4:6)]
Pok_Grouped$Attitude <- Attitude
Pok_Grouped$StepsAttitude <- StepAttitude
Pok_Grouped$PhyscialActivity <- Behaviour
Pok_Grouped$PokemonGo_AppUsage <- pok_new$app_usage_PokemonGoApp_pokemonusage1
Pok_Grouped$social_sharing <- pok_new$social_sharing
Pok_Grouped$PokemonRelate_Behaviour <- PokemonBehaviour
head(Pok_Grouped)
summary(Pok_Grouped)
########################
###Data Visualisation###
########################
# libraries required
library(ggplot2)
library(GGally)
require(foreign)
require(MASS)
require(Hmisc)
require(reshape2)
# Start plotting
ggpairs(Pok_Grouped)
boxplot(PhyscialActivity~education,
data=Pok_Grouped,
main="Different boxplots for gender",
xlab="Month Number",
ylab="Amount of Physical Activity"
)
boxplot(PhyscialActivity~Gender,
data=Pok_Grouped,
main="Different boxplots for Education Level",
xlab="Education Level",
ylab="Amount of Physical Activity"
)
########################
###Model Constructing###
########################
# library required
library(olsrr)
###Simple linear model###
# full model construction
Pok_Log.Linear <- lm(PhyscialActivity ~ log(age) + log(education) +
log(Gender) + Attitude + StepsAttitude +
log(PokemonGo_AppUsage) + log(social_sharing) +
PokemonRelate_Behaviour, data = Pok_Grouped)
summary(Pok_Log.Linear)
ols_step_best_subset(Pok_Log.Linear)
#assumption checking
par(mfrow = c(2, 2))
plot(Pok_Linear)
plot(Pok_Log.Linear)
dev.off()
#assumption checking
par(mfrow = c(2, 2))
plot(Pok_Log.Linear)
###Simple linear model###
# full model construction
Pok_Log.Linear <- lm(log(PhyscialActivity) ~ log(age) + log(education) +
log(Gender) + Attitude + StepsAttitude +
log(PokemonGo_AppUsage) + log(social_sharing) +
PokemonRelate_Behaviour, data = Pok_Grouped)
#assumption checking
par(mfrow = c(2, 2))
plot(Pok_Log.Linear)
# library required
library(olsrr)
###Simple linear model###
# full model construction
Pok_Log.Linear <- lm(log(PhyscialActivity) ~ log(age) + log(education) +
log(Gender) + log(Attitude) + StepsAttitude +
log(PokemonGo_AppUsage) + log(social_sharing) +
PokemonRelate_Behaviour, data = Pok_Grouped)
#assumption checking
par(mfrow = c(2, 2))
plot(Pok_Log.Linear)
###Simple linear model###
# full model construction
Pok_Log.Linear <- lm(log(PhyscialActivity) ~ log(age) + log(education) +
log(Gender) + log(Attitude) + log(StepsAttitude) +
log(PokemonGo_AppUsage) + log(social_sharing) +
log(PokemonRelate_Behaviour), data = Pok_Grouped)
#assumption checking
par(mfrow = c(2, 2))
plot(Pok_Log.Linear)
